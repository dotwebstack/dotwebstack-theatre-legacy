{"version":3,"sources":["SearchBegrippen.js","config/FormSchema.js","config/parameters.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["SearchBegrippen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","filterBegrippen","inputValue","data","filter","i","label","toLowerCase","includes","loadOptions","callback","setTimeout","state","react_default","a","createElement","Fragment","Async_default","placeholder","isLoading","cacheOptions","isClearable","defaultOptions","onInputChange","handleInputChange","onChange","handleSelect","Component","FormSchema","formSchema","title","type","required","properties","source","labels","default","compacted","subject","items","isPartOf","hasPartOf","altLabel","@language","@value","broaderTerm","definition","narrowerTerm","notation","note","prefLabel","related","relatedMatch","lib_default","className","schema","uiSchema","ui:options","addable","removable","orderable","ui:widget","onSubmit","form","handleFormData","formData","begrippenHostname","window","begrippenBeheerEndpoint","begrippenDefConfig","JsonLd","_ref","dangerouslySetInnerHTML","__html","JSON","stringify","cleanLabel","dirtyLabel","indexOf","substr","length","Editor","_Component","getLabelsConfig","contextUri","fetch","method","headers","Accept","then","response","json","setState","catch","console","error","compactBegrip","uri","doc","Promise","resolve","JsonLdProcessor","compact","context","err","metadata","Array","isArray","item","result","changeFormData","newData","keys","map","key","complete","@context","@graph","concat","expandJson","jsonld","saveBegrip","body","Content-Type","log","ld","getBegripLabel","toLocalURI","selected","value","savedValues","expand","expanded","contextFile","inherits","createClass","_this2","FormSchema_FormSchema","Editor_JsonLd","replace","App","fetchBegrippen","begrip","categorie_label","begrip_label","sort","b","options","e","newValue","selectedOption","href","SearchBegrippen_SearchBegrippen","Editor_Editor","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3650b53.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport AsyncSelect from 'react-select/lib/Async';\n\n\nexport default class SearchBegrippen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n        };\n    }\n    filterBegrippen = (inputValue) =>\n        this.props.data.filter(i =>\n            i.label.toLowerCase().includes(inputValue.toLowerCase())\n        );\n\n    loadOptions = (inputValue, callback) => {\n        setTimeout(() => {\n            callback(this.filterBegrippen(inputValue));\n        }, 1000);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <AsyncSelect\n                    placeholder=\"Zoek begrip...\"\n                    isLoading={this.props.isLoading}\n                    cacheOptions\n                    isClearable={true}\n                    loadOptions={this.loadOptions}\n                    defaultOptions\n                    onInputChange={this.props.handleInputChange}\n                    onChange={this.props.handleSelect}\n                />\n            </React.Fragment>\n        );\n    }\n}","import React from 'react'\nimport Form from \"react-jsonschema-form\"\n\nexport const FormSchema = (props) => {\n    const schemaProperties = {\n        source: {type: \"string\", title: props.labels[\"source\"], default: props.compacted[\"source\"]},\n        subject: {type: \"array\", items: { type: \"string\"}, title: \"subject\", default: props.compacted[\"subject\"]},\n        isPartOf: {type: \"array\", items: { type: \"string\"}, title: \"isPartOf\", default: props.compacted[\"isPartOf\"]},\n        hasPartOf: {type: \"array\", items: { type: \"string\"}, title: \"hasPartOf\", default: props.compacted[\"hasPartOf\"]},\n        label: {type: \"string\", title: \"label\", default: props.compacted[\"label\"]},\n        altLabel: {type: \"array\", items: { type: \"object\", properties: {\"@language\": {type: \"string\", title: \"Language\"}, \"@value\": {type: \"string\", title: \"Value\"}}}, title: \"altLabel\", default: props.compacted[\"altLabel\"]},\n        broaderTerm: {type: \"string\", title: \"broaderTerm\", default: props.compacted[\"broaderTerm\"]},\n        definition: {type: \"string\", title: \"definition\", default: props.compacted[\"definition\"]},\n        narrowerTerm: {type: \"array\", items: { type: \"string\"}, title: \"narrowerTerm\", default: props.compacted[\"narrowerTerm\"]},\n        // narrowerTerm: {type: \"array\", items: { type: \"object\", properties: { \"label\": {type: \"string\"}}}, title: \"narrowerTerm\", default: props.compacted[\"narrowerTerm\"]},\n        notation: {type: \"string\", title: \"notation\", default: props.compacted[\"notation\"]},\n        note: {type: \"string\", title: \"note\", default: props.compacted[\"note\"]},\n        prefLabel: {type: \"string\", title: \"prefLabel\", default: props.compacted[\"prefLabel\"]},\n        related: {type: \"array\", items: { type: \"string\"}, title: \"related\", default: props.compacted[\"related\"]},\n        // related: {type: \"array\", items: { type: \"object\", properties: { \"label\": {type: \"string\"}}}, title: \"related\", default: props.compacted[\"related\"]},\n        relatedMatch: {type: \"string\", title: \"relatedMatch\", default: props.compacted[\"relatedMatch\"]},\n    }\n\n    // const properties = JSON.parse( \"{\" + Object.keys(props.compacted)\n    //     .filter(key => !key.startsWith(\"@\"))\n    //     .map(key => `\"${key}\": ${JSON.stringify(schemaProperties[key])},`)\n    //     .reduce((prev, cur) => prev + cur, \"\")\n    //     .slice(0, -1) + \"}\")\n\n    const formSchema = {\n        title: \"Wijzig\",\n        type: \"object\",\n        required: [],\n        properties: schemaProperties\n    }\n\n    const uiSchema = {\n        \"ui:options\": {\n            \"addable\": true,\n            \"removable\": true,\n            \"orderable\": false\n        },\n        source: {\n            \"ui:widget\": \"textarea\"\n        },\n        subject: {\n            \"ui:options\": {\n                \"addable\": true,\n                \"removable\": true,\n                \"orderable\": false\n            }\n        },\n        altLabel: {\n            \"ui:options\": {\n                \"addable\": true,\n                \"removable\": true,\n                \"orderable\": false\n            }\n        },\n        narrowerTerm: {\n            \"ui:options\": {\n                \"addable\": true,\n                \"removable\": true,\n                \"orderable\": false\n            }\n        },\n        related: {\n            \"ui:options\": {\n                \"addable\": true,\n                \"removable\": true,\n                \"orderable\": false\n            }\n        }\n    }\n\n    const handleSubmit = (form) => {\n        props.handleFormData(form.formData)\n    }\n\n    return <Form\n                className=\"form form-wide\"\n                schema={formSchema}\n                uiSchema={uiSchema}\n        // onChange={handleSubmit}\n        onSubmit={handleSubmit}\n        // onError={log(\"errors\")}\n    />\n}","export const begrippenHostname = window.begrippenHostname\nexport const begrippenBeheerEndpoint = window.begrippenBeheerEndpoint\nexport const begrippenDefConfig = window.begrippenDefConfig\n","import React, { Component } from 'react'\nimport JsonLdProcessor from 'jsonld';\nimport contextFile from './config/context'\nimport {FormSchema} from './config/FormSchema'\nimport {toLocalURI} from \"./App\";\nimport {begrippenBeheerEndpoint, begrippenDefConfig, begrippenHostname} from \"./config/parameters\";\n\nexport const JsonLd = ({ data }) =>\n    <pre className=\"text-left\"\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(data, null, 2) }}\n    />\n\nconst cleanLabel = (dirtyLabel) => {\n    if(dirtyLabel.indexOf('Begrip: ') === 0) {\n        return dirtyLabel.substr('Begrip: '.length, dirtyLabel.length)\n    } else {\n        return dirtyLabel\n    }\n}\n\nexport class Editor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ld: {},\n            compacted: {},\n            context: contextFile,\n            formData: {},\n            labels: [],\n            savedValues: []\n        }\n\n    }\n\n    getLabelsConfig = (contextUri) => {\n            fetch(contextUri, {\n                    method: 'get',\n                    headers: {\n                        'Accept': 'application/ld+json'\n                    }\n                }\n            )\n                .then(response => response.json())\n                .then(labels => this.setState({labels: labels}))\n                .catch(console.error)\n        }\n\n    compactBegrip = (uri, doc) => new Promise(resolve => {\n        JsonLdProcessor.compact(doc, this.state.context, (err, compacted) => {\n            err && console.error(err)\n            let metadata = Array.isArray(compacted['@graph']) ? compacted['@graph'].filter(item => item['@id'] === uri)[0] : compacted\n            let result = {label: uri, uri: uri}\n\n            if (metadata['label']) {\n                result = {label: cleanLabel(metadata['label']), uri: uri}\n            }\n            resolve(result)\n        })\n    })\n\n    changeFormData = (formData) => {\n        // console.log(\"Handling Formdata\", formData)\n        this.setState({formData})\n\n        // convert formdata to compact json-ld\n        let newData = this.state.compacted\n        // for each form field update de compacted json-ld\n       Object.keys(formData).map(key => {\n            return newData[key] = formData[key]\n        })\n\n        // add the editted values to the saved values\n        // const graph = this.state.savedValues.concat(newData)\n        const complete = {\n            '@context': this.state.context,\n            '@graph': [].concat(newData)\n        }\n\n        // convert compact to expanded json-ld\n        // PUT the json-ld to the server\n       this.expandJson(complete).then(jsonld => this.saveBegrip(jsonld))\n    }\n\n    saveBegrip = (jsonld) => {\n        return fetch(`http://${begrippenHostname}${begrippenBeheerEndpoint}`, {\n                method: 'put',\n                body: JSON.stringify(jsonld),\n                headers: {\n                    'Content-Type': 'application/ld+json',\n\n                }\n            }\n        )\n            .then(response => console.log(\"Saved\", response))\n            .then(() => this.setState({ld : jsonld}))\n            .catch(console.error)\n    }\n\n\n\n    getBegripLabel = (uri) => {\n\n        return fetch(`${toLocalURI(uri)}?format=json`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/ld+json'\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(metadata => this.compactBegrip(uri, metadata))\n        .catch(console.error)\n    }\n\n    compact = (doc) => {\n        return JsonLdProcessor.compact(doc, this.state.context, (err, compacted) => {\n            err && console.error(err)\n            // delete compacted[\"@context\"]\n\n            let metadata = Array.isArray(compacted['@graph']) ? compacted['@graph'].filter(item => item['@id'] === this.props.selected.value)[0] : compacted\n\n            // save the other values, we will only edit the selected one...\n            let savedValues = Array.isArray(compacted['@graph']) ? compacted['@graph'].filter(item => item['@id'] !== this.props.selected.value) : []\n\n            // metadata.related && Promise.all(metadata.related.map(item => this.getBegripLabel(item))).then(labels => {\n            //     metadata.related = labels\n            //     this.setState({ld: doc, compacted: metadata})\n            // })\n            // metadata.narrowerTerm && Promise.all(metadata.narrowerTerm.filter(item => item === '').map(item => this.getBegripLabel(item))).then(labels => {\n            //     metadata.narrowerTerm = labels\n            //     this.setState({ld: doc, compacted: metadata})\n            // })\n            this.setState({ld: doc, compacted: metadata, savedValues: savedValues})\n        })\n    }\n\n    expandJson = (compacted) => {\n        return new Promise(resolve =>JsonLdProcessor.expand(compacted, (err, expanded) => resolve(expanded)))\n    }\n\n    componentDidMount() {\n        fetch(`${toLocalURI(this.props.selected.value)}?format=json`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/ld+json'\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(metadata => this.compact(metadata))\n        .then(() => this.getLabelsConfig(`http://${begrippenHostname}${begrippenDefConfig}`))\n        .catch(console.error)\n    }\n\n    render () {\n        return (<div className=\"row\">\n            <div className=\"col-md-12 order-md-1 text-left\">\n                <FormSchema compacted={this.state.compacted} ld={this.state.ld} labels={this.state.labels} formData={this.state.formData} handleFormData={this.changeFormData}/>\n                <hr/>\n                <JsonLd data={this.state.compacted}/>\n                <hr/>\n                {/*<JsonLd data={this.state.ld}/>*/}\n            </div>\n        </div>)\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport SearchBegrippen from \"./SearchBegrippen\";\nimport {Editor} from \"./Editor\";\nimport {begrippenBeheerEndpoint} from \"./config/parameters\";\nimport {begrippenHostname} from \"./config/parameters\";\n\nexport const toLocalURI = (uri) => {\n    if(uri && uri.length > 0) {\n        let host = uri.replace(\"standaard.aquo.nl\", begrippenHostname)\n        let dataUri = host.replace(\"/id/\", \"/doc/\")\n        return dataUri\n    } else {\n        return uri\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            data: [],\n            selected: ''\n        };\n    }\n\n    fetchBegrippen = (inputValue) => {\n        fetch(`http://${begrippenHostname}${begrippenBeheerEndpoint}?term=${inputValue}`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json'\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(json => json\n                .map(item => ({\n                    value: item.begrip, label: item.categorie_label ? `${item.begrip_label} (${item.categorie_label})` : item.begrip_label\n                })))\n            .then(data => data.sort((a, b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0)))\n            .then(options => this.setState({data: options, isLoading: false}))\n            .catch(e => console.error(e))\n    }\n\n\n    handleInputChange = (newValue) => {\n        const inputValue = newValue.replace(/\\W/g, '');\n        if(inputValue.length > 2) {\n            this.fetchBegrippen(inputValue)\n        }\n        this.setState({ inputValue });\n        return inputValue;\n    }\n\n    handleSelect = (selectedOption) => {\n        this.setState({selected: selectedOption})\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"py-5 text-center\">\n                    <h2>Begrippen Editor</h2>\n                    <p className=\"lead\">Zoek in de lijst om begrippen om te wijzigen</p>\n\n                    <div className=\"mb-3\">\n                        <pre>{this.state.selected && <a href={toLocalURI(this.state.selected.value)}>{toLocalURI(this.state.selected.value)}</a>}</pre>\n                        <SearchBegrippen\n                            data={this.state.data}\n                            isLoading={this.state.isLoading}\n                            handleSelect={this.handleSelect}\n                            handleInputChange={this.handleInputChange} />\n                    </div>\n                    {this.state.selected && <Editor selected={this.state.selected}/>}\n                </div>\n            </div>)\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
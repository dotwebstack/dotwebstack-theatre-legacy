{"version":3,"sources":["Async.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["WithCallbacks","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","newValue","inputValue","replace","setState","filterBegrippen","data","filter","i","label","toLowerCase","includes","loadOptions","callback","setTimeout","state","react_default","a","createElement","Fragment","Async_default","placeholder","isLoading","cacheOptions","isClearable","defaultOptions","onInputChange","onChange","handleSelect","Component","Editor","_Component","apply","arguments","inherits","createClass","key","value","fetch","concat","selected","method","headers","Accept","then","response","json","map","item","console","log","className","noValidate","htmlFor","type","id","required","style","width","App","selectedOption","_this2","undefined","reduce","prev","curr","sort","b","options","catch","e","error","src","alt","height","title","href","Async_WithCallbacks","Editor_Editor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6ceb39b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport AsyncSelect from 'react-select/lib/Async';\n\n\nexport default class WithCallbacks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n        };\n    }\n    handleInputChange = (newValue) => {\n        const inputValue = newValue.replace(/\\W/g, '');\n        this.setState({ inputValue });\n        return inputValue;\n    }\n    filterBegrippen = (inputValue) =>\n        this.props.data.filter(i =>\n            i.label.toLowerCase().includes(inputValue.toLowerCase())\n        );\n\n    loadOptions = (inputValue, callback) => {\n        setTimeout(() => {\n            callback(this.filterBegrippen(inputValue));\n        }, 1000);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <AsyncSelect\n                    placeholder=\"Zoek begrip...\"\n                    isLoading={this.props.isLoading}\n                    cacheOptions\n                    isClearable={true}\n                    loadOptions={this.loadOptions}\n                    defaultOptions\n                    onInputChange={this.handleInputChange}\n                    onChange={this.props.handleSelect}\n                />\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react'\n\nexport class Editor extends Component {\n\n    componentDidMount() {\n        fetch(`http://standaard.aquo.nl/beheer/begrip?subject=${this.props.selected.value}`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/ld+json'\n                }\n            }\n        )\n            .then(response => response.json())\n            .then(json => json.map(item => console.log(item)))\n            // .then(json => json.filter(item => item[\"http://www.w3.org/2000/01/rdf-schema#label\"] !== undefined)\n            //     .map(item => ({ value: item[\"@id\"], label: item[\"http://www.w3.org/2000/01/rdf-schema#label\"]\n            //             .map(label => label[\"@value\"]).reduce((prev, curr) => prev + \" | \" + curr)})))\n            // .then(data => data.sort((a,b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0)))\n            // .then(options => this.setState({data: options, isLoading: false}))\n        // .then(console.log)\n    }\n\n    render () {\n        return (<div className=\"row\">\n            <div className=\"col-md-8 order-md-1\">\n                <h4 className=\"mb-3\">Wijzig</h4>\n                <form className=\"needs-validation\" noValidate>\n\n\n                    <div className=\"mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">{this.props.selected.value}</span>\n                        </div>\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"username\">Type</label>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">http://www.w3.org/2004/02/skos/core#</span>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" id=\"type\" placeholder=\"Concept\"\n                                   required/>\n                            <div className=\"invalid-feedback\" style={{width: '100%'}}>\n                                Type is vereist\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"address\">Term</label>\n                        <input type=\"text\" className=\"form-control\" id=\"address\" placeholder=\"bijv. gemaal\"\n                               required/>\n                        <div className=\"invalid-feedback\">\n                            Voer een begrip in\n                        </div>\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"address2\">Definitie</label>\n                        <input type=\"textarea\" className=\"form-control\" id=\"definitie\"\n                               placeholder=\"Beschrijving van het begrip\"/>\n                    </div>\n\n                    <hr className=\"mb-4\"/>\n                    <button className=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Opslaan\n                    </button>\n                </form>\n            </div>\n        </div>)\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport WithCallbacks from \"./Async\";\nimport {Editor} from \"./Editor\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            data: [],\n            selected: '',\n        };\n    }\n    componentDidMount() {\n        fetch('http://standaard.aquo.nl/beheer/begrippen', {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/ld+json'\n                }\n            }\n        )\n        .then(response => response.json())\n        .then(json => json.filter(item => item[\"http://www.w3.org/2000/01/rdf-schema#label\"] !== undefined)\n            .map(item => ({ value: item[\"@id\"], label: item[\"http://www.w3.org/2000/01/rdf-schema#label\"]\n                    .map(label => label[\"@value\"]).reduce((prev, curr) => prev + \" | \" + curr)})))\n        .then(data => data.sort((a,b) => (a.label > b.label) ? 1 : ((b.label > a.label) ? -1 : 0)))\n        .then(options => this.setState({data: options, isLoading: false}))\n            .catch(e => console.error(e))\n    }\n\n    handleSelect = (selectedOption) => {\n        this.setState({selected: selectedOption})\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"py-5 text-center\">\n                    <img className=\"d-block mx-auto mb-4\" src=\"../../assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\"\n                         height=\"72\"/>\n                        <h2>Begrippen Editor</h2>\n                        <p className=\"lead\">Zoek in de lijst om naar begrippen om te wijzigen</p>\n\n                    <div className=\"mb-3\">\n                        <pre>{this.state.selected && <a title=\"Link to begrip\" href={this.state.selected.value} />}</pre>\n                        <WithCallbacks data={this.state.data} isLoading={this.state.isLoading} handleSelect={this.handleSelect}/>\n                    </div>\n                    {this.state.selected && <Editor selected={this.state.selected}/> }\n                </div>\n            </div>)\n    }\n    }\n    export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}